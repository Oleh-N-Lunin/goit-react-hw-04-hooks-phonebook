{"version":3,"sources":["components/FormStyles/FormStyles.module.css","components/Form/Form.js","components/ContactList/ContactList.js","components/SearchContact/SearchContact.js","App.js","index.js"],"names":["module","exports","Form","contactList","onSubmit","useState","name","setName","number","setNumber","InputValues","e","currentTarget","value","resetInputValues","idName","shortid","generate","idNumber","className","styles","form","preventDefault","alert","id","labelName","htmlFor","type","onChange","autoComplete","labelNumber","placeholder","pattern","required","btnForm","СontactList","onDeleted","map","href","btnList","onClick","SearchContact","containerSearch","labelSearch","inputSearch","App","JSON","parse","localStorage","getItem","contacts","setContacts","filter","setFilter","useEffect","window","setItem","stringify","container","headingForm","NewContact","newName","some","Object","values","join","filtredValues","toLocaleLowerCase","contact","includes","getFilter","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7f4e48c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FormStyles_container__MrgwT\",\"headingForm\":\"FormStyles_headingForm__3jfjq\",\"contactList\":\"FormStyles_contactList__1fDro\",\"form\":\"FormStyles_form__lAVlT\",\"labelName\":\"FormStyles_labelName__2-2g2\",\"labelNumber\":\"FormStyles_labelNumber__2SszC\",\"btnForm\":\"FormStyles_btnForm__1xa-u\",\"containerSearch\":\"FormStyles_containerSearch__31kRf\",\"btnList\":\"FormStyles_btnList__f1rBC\"};","import { useState } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport styles from \"../FormStyles/FormStyles.module.css\";\r\n\r\nfunction Form ({ contactList, onSubmit }) {\r\n    const [name, setName] = useState(\"\");\r\n    const [number, setNumber] = useState(\"\");\r\n\r\n    const InputValues = e => {\r\n        const { name, value } = e.currentTarget;\r\n        \r\n        switch (name) {\r\n            case \"name\":\r\n                setName(value);\r\n                break;\r\n            case \"number\":\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const addContact = e => {\r\n        e.preventDefault();\r\n        const checkName = contactList(name);\r\n        if (checkName) {\r\n            alert(\"You already have this contact name!!\");\r\n            return;\r\n        }\r\n\r\n        onSubmit({\r\n            id: shortid.generate(),\r\n            name,\r\n            number,\r\n        });\r\n\r\n        resetInputValues();\r\n    };\r\n\r\n    const resetInputValues = () => {\r\n        setName(\"\");\r\n        setNumber(\"\");\r\n    };\r\n\r\n        const idName = shortid.generate();\r\n        const idNumber = shortid.generate();\r\n\r\n        return (\r\n            <form className={styles.form} onSubmit={addContact}>\r\n                <label className={styles.labelName} htmlFor={idName}>Name</label>\r\n                <input\r\n                    id={idName}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={InputValues}\r\n                    autoComplete=\"off\"\r\n                />\r\n                <label className={styles.labelNumber} htmlFor={idNumber}>Phone number</label>\r\n                <input\r\n                    id={idNumber}\r\n                    placeholder=\"(0XX) XX-XX-XXX\"\r\n                    type=\"tel\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    onChange={InputValues}\r\n                    autoComplete=\"off\"\r\n                    required\r\n                />\r\n                <button className={styles.btnForm} type=\"submit\">Add contact</button>\r\n            </form>\r\n        );\r\n}\r\n\r\nexport default Form;","import PropTypes from 'prop-types';\r\n\r\nimport styles from \"../FormStyles/FormStyles.module.css\";\r\n\r\nfunction СontactList({ contactList, onDeleted }) {\r\n  return (\r\n    <ul className={'js-list'}>\r\n      {contactList.map(({ id, name, number }) => {\r\n        return (\r\n          <li key={id}>\r\n            <span>{name}:</span>\r\n            <span>\r\n              <a href={`tel: ${number}`}>{ number}</a>\r\n            </span>\r\n            <button\r\n              className={styles.btnList}\r\n              type=\"button\"\r\n              onClick={() => onDeleted(id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nСontactList.propTypes = {\r\n    contactList: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n\r\n    onDeleted: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default СontactList;","import PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\nimport styles from \"../FormStyles/FormStyles.module.css\";\r\n\r\nfunction SearchContact({ value, SearchContact }) {\r\n    const id = shortid.generate();\r\n    return (\r\n        <div className={styles.containerSearch}>\r\n            <label className={styles.labelSearch} htmlFor={id}>Search contact by name</label>\r\n            <input\r\n                className={styles.inputSearch}\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={value}\r\n                onChange={SearchContact}\r\n                id={id}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nSearchContact.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    SearchContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchContact;","import { useState, useEffect } from \"react\";\nimport Form from \"./components/Form/Form\";\nimport СontactList from \"./components/ContactList/ContactList\";\nimport SearchContact from \"./components/SearchContact/SearchContact\";\nimport React from \"react\";\n\nimport styles from \"./components/FormStyles/FormStyles.module.css\";\n\n\nfunction App () {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"contacts\")) ?? [];\n  });\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (NewContact) => {\n    setContacts([NewContact, ...contacts]);\n  };\n\n  const valuesFilter = e => {\n    const { value } = e.currentTarget;\n    setFilter(value);\n  };\n\n  const getFilter = () => {\n    const filtredValues = filter.toLocaleLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(filtredValues),\n    );\n  };\n\n  const checkName = (newName) => {\n    return contacts.some(\n      ({ name }) => name === Object.values(newName).join(''),\n    );\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  return (\n    <div className={styles.container}>\n      <h1 className={styles.headingForm}>Phone Book</h1>\n      <Form onSubmit={addContact} contactList={checkName} />\n      <h2 className={styles.contactList}>Contacts</h2>\n      <SearchContact value={filter} SearchContact={valuesFilter} />\n      <СontactList contactList={getFilter()} onDeleted={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}